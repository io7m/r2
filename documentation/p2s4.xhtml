<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r2 0.2.1 Documentation: 2.4. Meshes</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.3. Coordinate Systems</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.5. Transforms</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s3.xhtml#st300_p2s3" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s5.xhtml#st300_p2s5" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.meshes"/><div class="st300_section_title_number"><a id="st300_p2s4" href="#st300_p2s4" title="Section 2.4: Meshes">2.4</a></div><div class="st300_section_title">Meshes</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s4.xhtml#st300_p2s4ss1" title="Link to subsection 2.4.1: Overview">2.4.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s4.xhtml#st300_p2s4ss2" title="Link to subsection 2.4.2: Attributes">2.4.2. Attributes</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s4.xhtml#st300_p2s4ss3" title="Link to subsection 2.4.3: Types">2.4.3. Types</a></li></ul><div class="st300_subsection_container"><a id="di.meshes.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s4ss1" href="#st300_p2s4ss1" title="Subsection 2.4.1: Overview">2.4.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss1c1" href="#st300_p2s4ss1c1" title="Paragraph 2.4.1.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">mesh</span> is a collection of vertices that make up the triangles that define a polyhedral object, allocated on the GPU upon which the renderer is executing. In practical terms, a mesh is a pair <span class="st300_term expression">(a, i)</span>, where <span class="st300_term expression">a</span> is an OpenGL <span class="st300_term term">vertex buffer object</span> consisting of vertices, an <span class="st300_term expression">i</span> is an OpenGL <span class="st300_term term">element buffer object</span> consisting of indices that describe how to draw the mesh as a series of triangles.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss1c2" href="#st300_p2s4ss1c2" title="Paragraph 2.4.1.2">2</a></div><div class="st300_paragraph">The contents of <span class="st300_term expression">a</span> are mutable, but mesh references are considered to be immutable.</div></div></div><div class="st300_subsection_container"><a id="di.meshes.attributes"/><div class="st300_subsection_title_number"><a id="st300_p2s4ss2" href="#st300_p2s4ss2" title="Subsection 2.4.2: Attributes">2.4.2</a></div><div class="st300_subsection_title">Attributes</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss2c1" href="#st300_p2s4ss2c1" title="Paragraph 2.4.2.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">mesh</span> consists of <span class="st300_term term">vertices</span>. A vertex can be considered to be a value of a <span class="st300_term term">record type</span>, with the fields of the record referred to as the <span class="st300_term term">attributes</span> of the vertex. In the <span class="st300_term package">r2</span> package, an array buffer containing vertex data is specified using the array buffer types from <a class="st300_link_external" href="http://io7m.github.io/jcanephora">jcanephora</a>. The <span class="st300_term package">jcanephora</span> package allows programmers to specify the exact types of array buffers, allows for the full inspection of type information at runtime, including the ability to reference attributes by name, and allows for type-safe modification of the contents of array buffers using an efficient cursor interface.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss2c2" href="#st300_p2s4ss2c2" title="Paragraph 2.4.2.2">2</a></div><div class="st300_paragraph">Each attribute within an array buffer is assigned a numeric <span class="st300_term term">attribute index</span>. A numeric index is an arbitrary number between (including) <span class="st300_term constant">0</span> and some OpenGL implementation-defined upper limit. On modern graphics hardware, OpenGL allows for at least <span class="st300_term constant">16</span> numeric attributes. The indices are used to create an association between fields in the array buffer and <span class="st300_term term">shader</span> inputs. For the sake of sanity and consistency, it is the responsibility of rendering systems using OpenGL to establish conventions for the assignment of numeric attribute indices in shaders and array buffers <span class="st300_footnote_reference">[<a href="p2s4.xhtml#st300_f_5527_0" id="st300_fr_5254" title="Jump to footnote di.meshes.failure (reference 0)">12</a>]</span>. For example, many systems state that attribute <span class="st300_term constant">0</span> should be of type <span class="st300_term type">vec4</span> and should represent vertex <span class="st300_term term">positions</span>. Shaders simply assume that data arriving on attribute input <span class="st300_term constant">0</span> represents position data, and programmers are expected to create meshes where attribute <span class="st300_term constant">0</span> points to the field within the array that contains position data.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss2c3" href="#st300_p2s4ss2c3" title="Paragraph 2.4.2.3">3</a></div><div class="st300_paragraph">The <span class="st300_term package">r2</span> package uses the following conventions everywhere:</div></div><div class="st300_formal_item"><a id="di.meshes.attributes.single"/><div class="st300_formal_item_title"><a id="st300_p2s4ss2c4" href="#st300_p2s4ss2c4" title="Formal item 2.4.2.4: Mesh attribute conventions">2.4.2.4 Mesh attribute conventions</a></div><div class="st300_formal_item_content"><table class="st300_table mesh_types" summary="Mesh attribute conventions"><thead class="st300_table_head"><tr><th class="st300_table_column_name">Index</th><th class="st300_table_column_name">Type</th><th class="st300_table_column_name">Description</th></tr></thead><tbody class="st300_table_body"><tr><td class="st300_table_cell"><span class="st300_term constant">0</span></td><td class="st300_table_cell"><span class="st300_term type">vec3</span></td><td class="st300_table_cell">The object-space position of the vertex</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">1</span></td><td class="st300_table_cell"><span class="st300_term type">vec2</span></td><td class="st300_table_cell">The UV coordinates of the vertex</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">2</span></td><td class="st300_table_cell"><span class="st300_term type">vec3</span></td><td class="st300_table_cell">The object-space normal vector of the vertex</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">3</span></td><td class="st300_table_cell"><span class="st300_term type">vec4</span></td><td class="st300_table_cell">The tangent vector of the vertex</td></tr></tbody></table></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss2c5" href="#st300_p2s4ss2c5" title="Paragraph 2.4.2.5">5</a></div><div class="st300_paragraph"><span class="st300_term term">Batched instances</span> are expected to use the following additional conventions:</div></div><div class="st300_formal_item"><a id="di.meshes.attributes.batched"/><div class="st300_formal_item_title"><a id="st300_p2s4ss2c6" href="#st300_p2s4ss2c6" title="Formal item 2.4.2.6: Batched instance attribute conventions">2.4.2.6 Batched instance attribute conventions</a></div><div class="st300_formal_item_content"><table class="st300_table mesh_types" summary="Mesh attribute conventions"><thead class="st300_table_head"><tr><th class="st300_table_column_name">Index</th><th class="st300_table_column_name">Type</th><th class="st300_table_column_name">Description</th></tr></thead><tbody class="st300_table_body"><tr><td class="st300_table_cell"><span class="st300_term constant">4</span></td><td class="st300_table_cell"><span class="st300_term type">vec4</span></td><td class="st300_table_cell">Column 0 of the per-instance model matrix for batched instances.</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">5</span></td><td class="st300_table_cell"><span class="st300_term type">vec4</span></td><td class="st300_table_cell">Column 1 of the per-instance model matrix for batched instances.</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">6</span></td><td class="st300_table_cell"><span class="st300_term type">vec4</span></td><td class="st300_table_cell">Column 2 of the per-instance model matrix for batched instances.</td></tr><tr><td class="st300_table_cell"><span class="st300_term constant">7</span></td><td class="st300_table_cell"><span class="st300_term type">vec4</span></td><td class="st300_table_cell">Column 3 of the per-instance model matrix for batched instances.</td></tr></tbody></table></div></div></div><div class="st300_subsection_container"><a id="di.meshes.types"/><div class="st300_subsection_title_number"><a id="st300_p2s4ss3" href="#st300_p2s4ss3" title="Subsection 2.4.3: Types">2.4.3</a></div><div class="st300_subsection_title">Types</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s4ss3c1" href="#st300_p2s4ss3c1" title="Paragraph 2.4.3.1">1</a></div><div class="st300_paragraph">In the <span class="st300_term package">r2</span> package, the given attribute conventions are specified by the <a class="st300_link_external" href="apidocs/com/io7m/r2/core/R2AttributeConventions.html">R2AttributeConventions</a> type.</div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_5527_0" href="p2s4.xhtml#st300_fr_5254" title="Jump back to reference 0 of footnote di.meshes.failure">12</a>]</div><div class="st300_footnote_body">Naturally, as is standard with OpenGL, failing to associate the correct shader attributes with the correct vertex attributes results in silent failure and/or bizarre visual results.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s3.xhtml#st300_p2s3" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s5.xhtml#st300_p2s5" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.3. Coordinate Systems</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.5. Transforms</td></tr></table></div></div></body></html>
