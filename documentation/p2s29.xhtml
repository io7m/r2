<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r2 0.2.0 Documentation: 2.29. Filter: Screen Space Ambient Occlusion</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.28. Filter: Fog</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.30. Filter: Emission</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s28.xhtml#st300_p2s28" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s30.xhtml#st300_p2s30" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.ssao"/><div class="st300_section_title_number"><a id="st300_p2s29" href="#st300_p2s29" title="Section 2.29: Filter: Screen Space Ambient Occlusion">2.29</a></div><div class="st300_section_title">Filter: Screen Space Ambient Occlusion</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss1" title="Link to subsection 2.29.1: Overview">2.29.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss2" title="Link to subsection 2.29.2: Ambient Occlusion Buffer">2.29.2. Ambient Occlusion Buffer</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss3" title="Link to subsection 2.29.3: Algorithm">2.29.3. Algorithm</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss4" title="Link to subsection 2.29.4: Noise Texture">2.29.4. Noise Texture</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss5" title="Link to subsection 2.29.5: Sample Kernel">2.29.5. Sample Kernel</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss6" title="Link to subsection 2.29.6: Halo Removal">2.29.6. Halo Removal</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss7" title="Link to subsection 2.29.7: Performance">2.29.7. Performance</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss8" title="Link to subsection 2.29.8: Types">2.29.8. Types</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s29.xhtml#st300_p2s29ss9" title="Link to subsection 2.29.9: Shaders">2.29.9. Shaders</a></li></ul><div class="st300_subsection_container"><a id="di.ssao.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss1" href="#st300_p2s29ss1" title="Subsection 2.29.1: Overview">2.29.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss1c1" href="#st300_p2s29ss1c1" title="Paragraph 2.29.1.1">1</a></div><div class="st300_paragraph"><span class="st300_term term">Screen space ambient occlusion</span> is, unsurprisingly, an approximate algorithm for calculating <span class="st300_term term">ambient occlusion</span> in <a class="st300_link" href="p2s3.xhtml#di.coords.screen">screen space</a>. Informally, ambient occlusion is a measure of how exposed a given point is to the environment's ambient light. The <span class="st300_term package">r2</span> package does not directly support ambient lighting, so instead the <a class="st300_link" href="p2s12.xhtml#di.lighting.diffuse">diffuse</a> light term is typically modulated by an ambient occlusion term <span class="st300_footnote_reference">[<a href="p2s29.xhtml#st300_f_22888_0" id="st300_fr_21699" title="Jump to footnote di.ssao.application (reference 0)">27</a>]</span> to produce the same overall effect.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss1c2" href="#st300_p2s29ss1c2" title="Formal item 2.29.1.2: SSAO">2.29.1.2 SSAO</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="SSAO" src="images/ssao.png"/></div></div></div><div class="st300_subsection_container"><a id="di.ssao.abuffer"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss2" href="#st300_p2s29ss2" title="Subsection 2.29.2: Ambient Occlusion Buffer">2.29.2</a></div><div class="st300_subsection_title">Ambient Occlusion Buffer</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss2c1" href="#st300_p2s29ss2c1" title="Paragraph 2.29.2.1">1</a></div><div class="st300_paragraph">An <span class="st300_term term">ambient occlusion buffer</span> is a <a class="st300_link" href="p2s7.xhtml#di.render-target">render target</a> in which an occlusion term is stored. In the <span class="st300_term package">r2</span> package, ambient occlusion buffers are simple single-channel 8-bit images, where <span class="st300_term constant">0</span> means <span class="st300_term term">fully occluded</span> and <span class="st300_term constant">1</span> means <span class="st300_term term">not occluded</span>.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.algorithm"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss3" href="#st300_p2s29ss3" title="Subsection 2.29.3: Algorithm">2.29.3</a></div><div class="st300_subsection_title">Algorithm</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss3c1" href="#st300_p2s29ss3c1" title="Paragraph 2.29.3.1">1</a></div><div class="st300_paragraph">The algorithm works by consuming the depth and normal values from populated <a class="st300_link" href="p2s19.xhtml#di.deferred.geom.gbuffer">geometry buffer</a>. For the sake of simplicity, the algorithm will be described as if the <a class="st300_link" href="p2s29.xhtml#di.ssao.abuffer">ambient occlusion buffer</a> that will contain the calculated occlusion terms will be the same size as the geometry buffer. This is not necessarily the case in practice, for performance reasons. For each pixel at <span class="st300_term expression">(x, y)</span> in the geometry buffer, the <a class="st300_link" href="p2s3.xhtml#di.coords.eye">eye space Z</a> value <span class="st300_term expression">z</span> is <a class="st300_link" href="p2s21.xhtml#di.deferred-position-recon.eye-space-z">reconstructed</a> for the pixel, and the eye space normal vector <span class="st300_term expression">n</span> is sampled at the same location.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss3c2" href="#st300_p2s29ss3c2" title="Paragraph 2.29.3.2">2</a></div><div class="st300_paragraph">Then, a <span class="st300_term term">sampling hemisphere</span> is placed on the surface at <span class="st300_term expression">z</span>, oriented along <span class="st300_term expression">n</span>. A list of points, known as the <a class="st300_link" href="p2s29.xhtml#di.ssao.kernel">sample kernel</a>, are used to sample from random positions that fall inside the hemisphere. If a sample point appears to be inside the scene geometry, then the scene geometry is <span class="st300_term term">occluding</span> that point.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss3c3" href="#st300_p2s29ss3c3" title="Formal item 2.29.3.3: Sampling Hemispheres">2.29.3.3 Sampling Hemispheres</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Sampling hemispheres" src="images/ssao_hemi.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss3c4" href="#st300_p2s29ss3c4" title="Paragraph 2.29.3.4">4</a></div><div class="st300_paragraph">Informally, the algorithm for a point at <span class="st300_term expression">(x, y)</span>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss3c5" href="#st300_p2s29ss3c5" title="Formal item 2.29.3.5: Algorithm">2.29.3.5 Algorithm</a></div><div class="st300_formal_item_content"><ol class="st300_list_ordered"><li class="st300_list_item">Reconstruct the eye space position <span class="st300_term expression">e</span> of the screen space position <span class="st300_term expression">(x, y)</span>.</li><li class="st300_list_item">Sample the normal vector <span class="st300_term expression">n</span> at <span class="st300_term expression">(x, y)</span>.</li><li class="st300_list_item">Peturb the normal vector <span class="st300_term expression">n</span> using values sampled from a random <a class="st300_link" href="p2s29.xhtml#di.ssao.noise_texture">noise texture</a> that is tiled across the screen.</li><li class="st300_list_item">Produce a <a class="st300_link" href="p2s3.xhtml#di.coords.eye.normal-matrix">normal matrix</a> from <span class="st300_term expression">n</span> that will transform the inherently <a class="st300_link" href="p2s23.xhtml#di.normal-mapping.tangent-space">tangent space</a> sampling kernel vector to eye space. The peturbed normal vector has the effect of rotating the sampling hemisphere.</li><li class="st300_list_item">For a sampling kernel <span class="st300_term expression">k</span> of <span class="st300_term expression">m</span> points, of radius <span class="st300_term expression">r</span>, for each <span class="st300_term expression">i | 0 &lt;= i &lt; m</span>: <ol class="st300_list_ordered"><li class="st300_list_item">Calculate the eye space position <span class="st300_term expression">q</span> of the sampling point <span class="st300_term expression">k[i]</span>. This is calculated as <span class="st300_term expression">q = e + (k[i] * r)</span>.</li><li class="st300_list_item">Project <span class="st300_term expression">q</span> to screen space, use it to sample the depth buffer, and reconstruct the resulting eye space Z value <span class="st300_term expression">sz</span>. The value <span class="st300_term expression">sz</span> then represents the eye space Z value of the closest position of the surface in the geometry buffer to <span class="st300_term expression">q</span>.</li><li class="st300_list_item">If <span class="st300_term expression">abs (e.z - sz) &gt; r</span> then the point is automatically assumed not to be occluded. See <a class="st300_link" href="p2s29.xhtml#di.ssao.halo_removal">halo removal</a> for details.</li><li class="st300_list_item">If <span class="st300_term expression">sz &gt;= e.z</span>, then it means that the sampling point in the hemisphere has ended up underneath the rendered surface and is therefore being occluded by it.</li></ol></li><li class="st300_list_item">Calculate the final occlusion value <span class="st300_term expression">o</span> by summing the occlusion values of each sample point, where <span class="st300_term constant">1.0</span> means the point was occluded, and <span class="st300_term constant">0.0</span> means that it was not. Return <span class="st300_term expression">1.0 - (o / m)</span>.</li></ol></div></div></div><div class="st300_subsection_container"><a id="di.ssao.noise_texture"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss4" href="#st300_p2s29ss4" title="Subsection 2.29.4: Noise Texture">2.29.4</a></div><div class="st300_subsection_title">Noise Texture</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss4c1" href="#st300_p2s29ss4c1" title="Paragraph 2.29.4.1">1</a></div><div class="st300_paragraph">The <span class="st300_term term">noise texture</span> used by the algorithm is a simple RGB texture with each texel being given by the expression <span class="st300_term expression">normalize ((random() * 2.0) - 1.0, (random() * 2.0) - 1.0, 0.0)</span>. The <a class="st300_link" href="p2s29.xhtml#di.ssao.kernel">sampling kernel</a> used by the algorithm is conceptually oriented along the <a class="st300_link" href="p2s23.xhtml#di.normal-mapping.tangent-space">tangent space</a>  Z axis, and therefore each texel in the noise texture effectively represents a rotation around the Z axis.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss4c2" href="#st300_p2s29ss4c2" title="Paragraph 2.29.4.2">2</a></div><div class="st300_paragraph">In the implementation of the algorithm, the texture is simply tiled across the screen and sampled using the current screen space coordinates.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.kernel"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss5" href="#st300_p2s29ss5" title="Subsection 2.29.5: Sample Kernel">2.29.5</a></div><div class="st300_subsection_title">Sample Kernel</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss5c1" href="#st300_p2s29ss5c1" title="Paragraph 2.29.5.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">sample kernel</span> is a fixed-size list of random sampling points, arranged in a hemispherical pattern. For better visual results, the random points are not evenly distributed within the hemisphere but are instead clustered more densely nearer the origin.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss5c2" href="#st300_p2s29ss5c2" title="Formal item 2.29.5.2: Point Distribution">2.29.5.2 Point Distribution</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Distribution of sampling points" src="images/ssao_hemi_points.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss5c3" href="#st300_p2s29ss5c3" title="Paragraph 2.29.5.3">3</a></div><div class="st300_paragraph">By using a distribution of sample points nearer the origin, samples closer to the origin have the effect of occluding more than points that are further away.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.halo_removal"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss6" href="#st300_p2s29ss6" title="Subsection 2.29.6: Halo Removal">2.29.6</a></div><div class="st300_subsection_title">Halo Removal</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss6c1" href="#st300_p2s29ss6c1" title="Paragraph 2.29.6.1">1</a></div><div class="st300_paragraph">A common problem with SSAO implementations is <span class="st300_term term">haloing</span>. In practical terms, this is an issue caused by two objects being very close when considered in screen space, but that were actually far apart when considered in eye space.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss6c2" href="#st300_p2s29ss6c2" title="Formal item 2.29.6.2: Halo Artifacts">2.29.6.2 Halo Artifacts</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Halo artifacts" src="images/ssao_halo.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss6c3" href="#st300_p2s29ss6c3" title="Paragraph 2.29.6.3">3</a></div><div class="st300_paragraph">The simple solution to this problem is to ignore any surface points that are at a distance greater than the sampling radius from the origin. In the actual implementation, a simple comparison of the eye-space Z values is used.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.performance"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss7" href="#st300_p2s29ss7" title="Subsection 2.29.7: Performance">2.29.7</a></div><div class="st300_subsection_title">Performance</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss7c1" href="#st300_p2s29ss7c1" title="Paragraph 2.29.7.1">1</a></div><div class="st300_paragraph">The SSAO algorithm is extremely expensive; by far the most expensive algorithm implemented in the <span class="st300_term package">r2</span> package. The package provides numerous means to control the performance of the algorithm.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss7c2" href="#st300_p2s29ss7c2" title="Paragraph 2.29.7.2">2</a></div><div class="st300_paragraph">For a kernel of size <span class="st300_term expression">n</span>, an occlusion map of size <span class="st300_term expression">w * h</span> will incur at least <span class="st300_term expression">w * h * n</span> texture reads when sampling from the <a class="st300_link" href="p2s19.xhtml#di.deferred.geom.gbuffer">geometry buffer</a> to calculate the occlusion term. Therefore, reducing the resolution of the <a class="st300_link" href="p2s29.xhtml#di.ssao.abuffer">ambient occlusion buffer</a> is an effective way to improve the performance of the algorithm at a noticeable reduction in visual quality. The <span class="st300_term package">r2</span> package does not provide any specific support for this; the programmer simply needs to allocate a smaller ambient occlusion buffer. For the same reason, using a smaller kernel (a smaller value of <span class="st300_term expression">n</span>) will also improve performance but reduce visual quality.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss7c3" href="#st300_p2s29ss7c3" title="Paragraph 2.29.7.3">3</a></div><div class="st300_paragraph">To reduce high frequency noise introduced by the random sampling pattern used, a bilateral blur filter is often used. In the <span class="st300_term package">r2</span> package, the blur is separate from the SSAO effect and can therefore be omitted to improve performance at the cost of producing a noisier image:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s29ss7c4" href="#st300_p2s29ss7c4" title="Formal item 2.29.7.4: SSAO (Without blur)">2.29.7.4 SSAO (Without blur)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="SSAO without blur" src="images/ssao_noise.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss7c5" href="#st300_p2s29ss7c5" title="Paragraph 2.29.7.5">5</a></div><div class="st300_paragraph">The image displayed at the start of this section uses an ambient occlusion buffer that is exactly half the size of the screen, a kernel of size <span class="st300_term constant">64</span>, and a maximum sampling distance of <span class="st300_term constant">0.25</span> eye-space units. A single bilateral blur pass was used.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.types"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss8" href="#st300_p2s29ss8" title="Subsection 2.29.8: Types">2.29.8</a></div><div class="st300_subsection_title">Types</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss8c1" href="#st300_p2s29ss8c1" title="Paragraph 2.29.8.1">1</a></div><div class="st300_paragraph">In the <span class="st300_term package">r2</span> package, the SSAO effect is provided by the <a class="st300_link_external" href="apidocs/com/io7m/r2/filters/R2FilterSSAO.html">R2FilterSSAO</a> type.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss8c2" href="#st300_p2s29ss8c2" title="Paragraph 2.29.8.2">2</a></div><div class="st300_paragraph">Occlusion maps can be conveniently applied to light maps with the <a class="st300_link_external" href="apidocs/com/io7m/r2/filters/R2FilterOcclusionApplicator.html">R2FilterOcclusionApplicator</a> filter.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss8c3" href="#st300_p2s29ss8c3" title="Paragraph 2.29.8.3">3</a></div><div class="st300_paragraph">The provided implementation of the sampling kernel is given by the <a class="st300_link_external" href="apidocs/com/io7m/r2/filters/R2SSAOKernel.html">R2SSAOKernel</a> type.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss8c4" href="#st300_p2s29ss8c4" title="Paragraph 2.29.8.4">4</a></div><div class="st300_paragraph">The provided implementation of the noise texture is given by the <a class="st300_link_external" href="apidocs/com/io7m/r2/filters/R2SSAONoiseTexture.html">R2SSAONoiseTexture</a> type.</div></div></div><div class="st300_subsection_container"><a id="di.ssao.shaders"/><div class="st300_subsection_title_number"><a id="st300_p2s29ss9" href="#st300_p2s29ss9" title="Subsection 2.29.9: Shaders">2.29.9</a></div><div class="st300_subsection_title">Shaders</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s29ss9c1" href="#st300_p2s29ss9c1" title="Paragraph 2.29.9.1">1</a></div><div class="st300_paragraph">The shader implementation of the SSAO algorithm is the <a class="st300_link_external" href="doxygen/io7m-r2-shaders-0.2.0/R2SSAO_8frag_source.html">R2SSAO</a> shader.</div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_22888_0" href="p2s29.xhtml#st300_fr_21699" title="Jump back to reference 0 of footnote di.ssao.application">27</a>]</div><div class="st300_footnote_body">The <span class="st300_term package">r2</span> package provides convenient methods to apply ambient occlusion to lighting, but does not require the programmer to use any particular method.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s28.xhtml#st300_p2s28" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s30.xhtml#st300_p2s30" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.28. Filter: Fog</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.30. Filter: Emission</td></tr></table></div></div></body></html>
