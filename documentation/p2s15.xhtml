<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r2 0.2.1 Documentation: 2.15. Lighting: Projective</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.14. Lighting: Spherical</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.16. Shadows</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s14.xhtml#st300_p2s14" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s16.xhtml#st300_p2s16" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.lighting.projective"/><div class="st300_section_title_number"><a id="st300_p2s15" href="#st300_p2s15" title="Section 2.15: Lighting: Projective">2.15</a></div><div class="st300_section_title">Lighting: Projective</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss1" title="Link to subsection 2.15.1: Overview">2.15.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss2" title="Link to subsection 2.15.2: Algorithm">2.15.2. Algorithm</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss3" title="Link to subsection 2.15.3: Back projection">2.15.3. Back projection</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss4" title="Link to subsection 2.15.4: Clamping">2.15.4. Clamping</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss5" title="Link to subsection 2.15.5: Attenuation">2.15.5. Attenuation</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s15.xhtml#st300_p2s15ss6" title="Link to subsection 2.15.6: Application">2.15.6. Application</a></li></ul><div class="st300_subsection_container"><a id="di.lighting.projective.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss1" href="#st300_p2s15ss1" title="Subsection 2.15.1: Overview">2.15.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss1c1" href="#st300_p2s15ss1c1" title="Paragraph 2.15.1.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">projective light</span> in the <span class="st300_term package">r2</span> package is a light that <span class="st300_term term">projects</span>  a texture onto the scene from a given <span class="st300_term term">origin</span> specified in <a class="st300_link" href="p2s3.xhtml#di.coords.eye">eye space</a> up to a given maximum <span class="st300_term term">radius</span>. Projective lights are the only types of lights in the <span class="st300_term package">r2</span> package that are able to project <span class="st300_term term">shadows</span>.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss1c2" href="#st300_p2s15ss1c2" title="Formal item 2.15.1.2: Projective lighting">2.15.1.2 Projective lighting</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Projective lighting" src="images/projective.png"/></div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss1c3" href="#st300_p2s15ss1c3" title="Formal item 2.15.1.3: Projective lighting (Texture)">2.15.1.3 Projective lighting (Texture)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Projective lighting (Texture)" src="images/sunflower.png"/></div></div></div><div class="st300_subsection_container"><a id="di.lighting.projective.algorithm"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss2" href="#st300_p2s15ss2" title="Subsection 2.15.2: Algorithm">2.15.2</a></div><div class="st300_subsection_title">Algorithm</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss2c1" href="#st300_p2s15ss2c1" title="Paragraph 2.15.2.1">1</a></div><div class="st300_paragraph">At a basic level, a projective light performs the same operations that occur when an ordinary 3D position is projected onto the screen during rendering. During normal rendering, a point <span class="st300_term expression">p</span> given in <a class="st300_link" href="p2s3.xhtml#di.coords.world">world space</a> is transformed to <a class="st300_link" href="p2s3.xhtml#di.coords.eye">eye space</a> given the current camera's <span class="st300_term term">view matrix</span>, and is then transformed to <a class="st300_link" href="p2s3.xhtml#di.coords.clip">clip space</a> using the current camera's <span class="st300_term term">projection matrix</span>. During rendering of a scene lit by a projective light, a given point <span class="st300_term expression">q</span> in the scene is transformed back to <span class="st300_term term">world space</span> given the current camera's <span class="st300_term term">inverse view matrix</span>, and is then transformed to <span class="st300_term term">eye space from the point of view of the light</span> (subsequently referred to as <span class="st300_term term">light eye space</span>) using the light's <span class="st300_term term">view matrix</span>. Finally, <span class="st300_term expression">q</span> is transformed to <span class="st300_term term">clip space from the point of view of the light</span> (subsequently referred to as <span class="st300_term term">light clip space</span>) using the light's <span class="st300_term term">projection matrix</span>. It should be noted (in order to indicate that there is nothing unusual about the light's view or projection matrices) that if the camera and light have the same position, orientation, scale, and projection, then the resulting transformed values of <span class="st300_term expression">q</span> and <span class="st300_term expression">p</span> are identical. The resulting transformed value of <span class="st300_term expression">q</span> is mapped from the range <span class="st300_term expression">[(-1, -1, -1), (1, 1, 1)]</span> to <span class="st300_term expression">[(0, 0, 0), (1, 1, 1)]</span>, and the resulting coordinates are used to retrieve a texel from the 2D texture associated with the light.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss2c2" href="#st300_p2s15ss2c2" title="Paragraph 2.15.2.2">2</a></div><div class="st300_paragraph">Intuitively, an ordinary <span class="st300_term term">perspective projection</span> will cause the light to appear to take the shape of a <span class="st300_term term">frustum</span>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss2c3" href="#st300_p2s15ss2c3" title="Formal item 2.15.2.3: Projective lighting (Frustum)">2.15.2.3 Projective lighting (Frustum)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Projective lighting (Frustum)" src="images/projective_frustum.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss2c4" href="#st300_p2s15ss2c4" title="Paragraph 2.15.2.4">4</a></div><div class="st300_paragraph">There are two issues with the projective lighting algorithm that also have to be solved: <a class="st300_link" href="p2s15.xhtml#di.lighting.projective.back-projection">back projection</a> and <a class="st300_link" href="p2s15.xhtml#di.lighting.projective.clamping">clamping</a>.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.projective.back-projection"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss3" href="#st300_p2s15ss3" title="Subsection 2.15.3: Back projection">2.15.3</a></div><div class="st300_subsection_title">Back projection</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss3c1" href="#st300_p2s15ss3c1" title="Paragraph 2.15.3.1">1</a></div><div class="st300_paragraph">The <a class="st300_link" href="p2s15.xhtml#di.lighting.projective.algorithm">algorithm</a> described above will produce a so-called <span class="st300_term term">dual</span> or <span class="st300_term term">back projection</span>. In other words, the texture will be projected along the view direction of the camera, but will also be projected along the <span class="st300_term term">negative</span> view direction <span class="st300_footnote_reference">[<a href="p2s15.xhtml#st300_f_10157_0" id="st300_fr_10011" title="Jump to footnote di.lighting.projective.back_clip (reference 0)">17</a>]</span>. The visual result is that it appears that there are two projective lights in the scene, oriented in opposite directions. As <a class="st300_link" href="p2s3.xhtml#di.coords.clip">mentioned previously</a>, given the typical projection matrix, the <span class="st300_term expression">w</span> component of a given clip space position is the negation of the eye space <span class="st300_term expression">z</span> component. Because it is assumed that the observer is looking towards the negative <span class="st300_term expression">z</span> direction, all positions that are in front of the observer must have positive <span class="st300_term expression">w</span> components. Therefore, if <span class="st300_term expression">w</span> is negative, then the position is behind the observer. The standard fix for this problem is to check to see if the <span class="st300_term expression">w</span> component of the <span class="st300_term term">light-clip space</span> coordinate is negative, and simply return a pure black color (indicating no light contribution) rather than sampling from the projected texture.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.projective.clamping"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss4" href="#st300_p2s15ss4" title="Subsection 2.15.4: Clamping">2.15.4</a></div><div class="st300_subsection_title">Clamping</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss4c1" href="#st300_p2s15ss4c1" title="Paragraph 2.15.4.1">1</a></div><div class="st300_paragraph">The <a class="st300_link" href="p2s15.xhtml#di.lighting.projective.algorithm">algorithm</a> described above takes an arbitrary point in the scene and projects it from the point of view of the light. There is no guarantee that the point actually falls within the light's view frustum (although this is mitigated slightly by the <span class="st300_term package">r2</span> package's use of light volumes for deferred rendering), and therefore the calculated texture coordinates used to sample from the projected texture are not guaranteed to be in the range <span class="st300_term expression">[(0, 0), (1, 1)]</span>. In order to get the intended visual effect, the texture used must be set to <span class="st300_term term">clamp-to-edge</span> and have black pixels on all of the edges of the texture image, or <span class="st300_term term">clamp-to-border</span> with a black border color. Failing to do this can result in strange visual anomalies, as the texture will be unexpectedly repeated or smeared across the area outside of the intersection between the light volume and the receiving surface:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss4c2" href="#st300_p2s15ss4c2" title="Formal item 2.15.4.2: Projective lighting (Correct, clamped)">2.15.4.2 Projective lighting (Correct, clamped)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Projective lighting (Correct, clamped)" src="images/projective_clamped.png"/></div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss4c3" href="#st300_p2s15ss4c3" title="Formal item 2.15.4.3: Projective lighting (Incorrect, not clamped)">2.15.4.3 Projective lighting (Incorrect, not clamped)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Projective lighting (Incorrect, not clamped)" src="images/projective_not_clamped.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss4c4" href="#st300_p2s15ss4c4" title="Paragraph 2.15.4.4">4</a></div><div class="st300_paragraph">The <span class="st300_term package">r2</span> package will raise an exception if a non-clamped texture is assigned to a projective light.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.projective.attenuation"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss5" href="#st300_p2s15ss5" title="Subsection 2.15.5: Attenuation">2.15.5</a></div><div class="st300_subsection_title">Attenuation</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss5c1" href="#st300_p2s15ss5c1" title="Paragraph 2.15.5.1">1</a></div><div class="st300_paragraph">The light supports <a class="st300_link" href="p2s12.xhtml#di.lighting.attenuation">attenuation</a> using the maximum range taken from the projection.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.projective.application"/><div class="st300_subsection_title_number"><a id="st300_p2s15ss6" href="#st300_p2s15ss6" title="Subsection 2.15.6: Application">2.15.6</a></div><div class="st300_subsection_title">Application</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss6c1" href="#st300_p2s15ss6c1" title="Paragraph 2.15.6.1">1</a></div><div class="st300_paragraph">The final light applied to the surface is given by <span class="st300_term function">projective</span> in <a class="st300_link_external" href="haskell/Projective.hs">Projective.hs</a>, where <span class="st300_term variable">sr</span>, <span class="st300_term variable">sg</span>, <span class="st300_term variable">sb</span> are the red, green, and blue channels, respectively, of the surface being lit. The surface-to-light vector <span class="st300_term variable">stl</span> is calculated by normalizing the negation of the difference between the the current eye space <span class="st300_term variable">surface_position</span> and the eye space origin of the light.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss6c2" href="#st300_p2s15ss6c2" title="Formal item 2.15.6.2: Projective lighting (Application)">2.15.6.2 Projective lighting (Application)</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">module Projective where

import qualified Attenuation
import qualified Color3
import qualified Color4
import qualified Direction
import qualified LightDiffuse
import qualified LightSpecular
import qualified LightProjective
import qualified Normal
import qualified Position3
import qualified Specular
import qualified Spaces
import qualified Vector3f
import qualified Vector4f

projective :: Direction.T Spaces.Eye -&gt; Normal.T -&gt; Position3.T Spaces.Eye -&gt; LightProjective.T -&gt; Specular.T -&gt; Float -&gt; Color3.T -&gt; Color4.T -&gt; Vector3f.T
projective view n surface_position light specular shadow texture (Vector4f.V4 sr sg sb _) =
  let
    position_diff   = Position3.sub3 surface_position (LightProjective.origin light)
    stl             = Vector3f.normalize (Vector3f.negation position_diff)
    distance        = Vector3f.magnitude (position_diff)
    attenuation_raw = Attenuation.attenuation (LightProjective.radius light) (LightProjective.falloff light) distance
    attenuation     = attenuation_raw * shadow
    light_color     = Vector3f.mult3 (LightProjective.color light) texture
    light_intensity = LightProjective.intensity light
    light_d         = LightDiffuse.diffuse stl n light_color light_intensity
    light_s         = LightSpecular.specularBlinnPhong stl view n light_color light_intensity specular
    light_da        = Vector3f.scale light_d attenuation
    light_sa        = Vector3f.scale light_s attenuation
    lit_d           = Vector3f.mult3 (Vector3f.V3 sr sg sb) light_da
    lit_s           = Vector3f.add3 lit_d light_sa
  in 
    lit_s
</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss6c3" href="#st300_p2s15ss6c3" title="Paragraph 2.15.6.3">3</a></div><div class="st300_paragraph">The given <span class="st300_term variable">shadow</span> factor is a value in the range <span class="st300_term expression">[0, 1]</span>, where <span class="st300_term expression">0</span> indicates that the lit point is fully in shadow for the current light, and <span class="st300_term expression">1</span> indicates that the lit point is not in shadow. This is calculated for <a class="st300_link" href="p2s17.xhtml#di.shadows.variance">variance</a> shadows and is assumed to be <span class="st300_term expression">1</span> for lights without shadows. As can be seen, a value of <span class="st300_term expression">0</span> has the effect of fully attenuating the light.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s15ss6c4" href="#st300_p2s15ss6c4" title="Paragraph 2.15.6.4">4</a></div><div class="st300_paragraph">The color denoted by <span class="st300_term variable">texture</span> is assumed to have been sampled from the projected texture. Assuming the eye space position being shaded <span class="st300_term expression">p</span>, the matrix to get from eye space to light-clip space is given by The final light applied to the surface is given by <span class="st300_term function">projective_matrix</span> in <a class="st300_link_external" href="haskell/ProjectiveMatrix.hs">ProjectiveMatrix.hs</a>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s15ss6c5" href="#st300_p2s15ss6c5" title="Formal item 2.15.6.5: Projective matrix">2.15.6.5 Projective matrix</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">module ProjectiveMatrix where

import qualified Matrix4f

projective_matrix :: Matrix4f.T -&gt; Matrix4f.T -&gt; Matrix4f.T -&gt; Matrix4f.T
projective_matrix camera_view light_view light_projection =
  case Matrix4f.inverse camera_view of
    Just cv -&gt; Matrix4f.mult (Matrix4f.mult light_projection light_view) cv
    Nothing -&gt; undefined -- A view matrix is always invertible

</pre></div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_10157_0" href="p2s15.xhtml#st300_fr_10011" title="Jump back to reference 0 of footnote di.lighting.projective.back_clip">17</a>]</div><div class="st300_footnote_body">The same issue occurs when performing ordinary rendering of points in a scene. The issue is solved there by clipping primitives based on their <span class="st300_term expression">w</span> component so that primitives that are "behind" the observer are not rendered.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s14.xhtml#st300_p2s14" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s16.xhtml#st300_p2s16" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.14. Lighting: Spherical</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.16. Shadows</td></tr></table></div></div></body></html>
