<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>com.io7m.r2 0.3.0-SNAPSHOT Documentation: 1.1. Orientation</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">1. Package Information</td><td class="st300_navbar_up_title_cell">1. Package Information</td><td class="st300_navbar_next_title_cell">1.2. Installation</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1.xhtml#st300_p1" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p1s2.xhtml#st300_p1s2" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="pkg.orientation"/><div class="st300_section_title_number"><a id="st300_p1s1" href="#st300_p1s1" title="Section 1.1: Orientation">1.1</a></div><div class="st300_section_title">Orientation</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss1" title="Link to subsection 1.1.1: Overview">1.1.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p1s1.xhtml#st300_p1s1ss2" title="Link to subsection 1.1.2: Features">1.1.2. Features</a></li></ul><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss1" href="#st300_p1s1ss1" title="Subsection 1.1.1: Overview">1.1.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p1s1ss1c1" href="#st300_p1s1ss1c1" title="Paragraph 1.1.1.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">r2</span> package provides a minimalist deferred rendering system.</div></div></div><div class="st300_subsection_container"><div class="st300_subsection_title_number"><a id="st300_p1s1ss2" href="#st300_p1s1ss2" title="Subsection 1.1.2: Features">1.1.2</a></div><div class="st300_subsection_title">Features</div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s1ss2c1" href="#st300_p1s1ss2c1" title="Formal item 1.1.2.1: Features">1.1.2.1 Features</a></div><div class="st300_formal_item_content"><ul class="st300_list_unordered"><li class="st300_list_item">A <span class="st300_term term">deferred rendering</span> core for <span class="st300_term term">opaque</span> objects.</li><li class="st300_list_item">A <span class="st300_term term">forward renderer</span>, supporting a subset of the features of the <span class="st300_term term">deferred renderer</span>, for rendering <span class="st300_term term">translucent</span> objects.</li><li class="st300_list_item">A full dynamic lighting system, including <span class="st300_term term">variance</span> shadow mapping. The use of <span class="st300_term term">deferred rendering</span> allows for potentially hundreds of dynamic lights per scene.</li><li class="st300_list_item">Ready-to-use shaders providing surfaces with a wide variety of effects such as <span class="st300_term term">normal mapping</span>, <span class="st300_term term">environment-mapped reflections</span>, <span class="st300_term term">generic refraction</span>, <span class="st300_term term">surface emission</span>, <span class="st300_term term">mapped specular highlights</span>, etc.</li><li class="st300_list_item">A variety of postprocessing effects such as <span class="st300_term term">box blurring</span>, <span class="st300_term term">screen-space ambient occlusion (SSAO)</span>, <span class="st300_term term">fast approximate antialiasing (FXAA)</span>, <span class="st300_term term">color correction</span>, <span class="st300_term term">bloom</span>, etc. Effects can be applied in any order.</li><li class="st300_list_item">Explicit control over all resource loading and caching. For all <span class="st300_term term">transient</span> resources, the programmer is required to provide the renderer with explicit <span class="st300_term term">pools</span>, and the pools themselves are responsible for allocating and loading resources.</li><li class="st300_list_item">Extensive use of static types. As with all <a class="st300_link_external" href="http://io7m.com">io7m</a> packages, there is extreme emphasis on using the type system to make it difficult to use the APIs incorrectly.</li><li class="st300_list_item">Portability. The renderer will run on any system supporting OpenGL <span class="st300_term constant">3.3</span> and Java 8.</li></ul></div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p1s1ss2c2" href="#st300_p1s1ss2c2" title="Formal item 1.1.2.2: Non-features">1.1.2.2 Non-features</a></div><div class="st300_formal_item_content"><ul class="st300_list_unordered"><li class="st300_list_item">A scene graph. The renderer expects the programmer to provide a set of <span class="st300_term term">instances</span> (with associated <span class="st300_term term">shaders</span>) and <span class="st300_term term">lights</span> once per frame, and the renderer will obediently draw exactly those instances. This frees the programmer from having to interact with a clumsy and type-unsafe object-oriented scene graph as with other 3D engines, and from having to try to crowbar their own program's data structures into an existing graph system.</li><li class="st300_list_item">Spatial partitioning. The renderer knows nothing of the world the programmer is trying to render. The programmer is expected to have done the work of deciding which <span class="st300_term term">instances</span> and <span class="st300_term term">lights</span> contribute to the current image, and to provide only those <span class="st300_term term">lights</span> and <span class="st300_term term">instances</span> for the current frame. This means that the programmer is free to use any spatial partitioning system desired.</li><li class="st300_list_item">Input handling. The renderer knows nothing about keyboards, mice, joysticks. The programmer passes an immutable snapshot of a scene to the renderer, and the renderer returns an image. This means that the programmer is free to use any input system desired without having to painfully integrate their own code with an existing input system as with other 3D engines.</li><li class="st300_list_item">Audio. The renderer makes images, not sounds. This allows programmers to use any audio system they want in their programs.</li><li class="st300_list_item">Skeletal animation. The input to the renderer is a set of triangle <span class="st300_term term">meshes</span> in the form of <span class="st300_term term">vertex buffer objects</span>. This means that the programmer is free to use any skeletal animation system desired, providing that the system is capable of producing <span class="st300_term term">vertex buffer objects</span> of the correct type as a result.</li><li class="st300_list_item">Model loading. The input to the renderer is a set of triangle <span class="st300_term term">meshes</span> in the form of <span class="st300_term term">vertex buffer objects</span>. This means that the programmer is free to use any model loading system desired, providing that the system is capable of producing <span class="st300_term term">vertex buffer objects</span> of the correct type as a result.</li><li class="st300_list_item">Future proofing. The average lifetime of a rendering system is about five years. Due to the extremely rapid pace of advancement in graphics hardware, the methods use to render graphics <span class="st300_term term">today</span> will bear almost no relation to those used five years into the future. The <span class="st300_term package">r2</span> package is under no illusion that it will still be relevant in a decade's time. It is designed to get work done <span class="st300_term term">today</span>, using exactly those techniques that are relevant <span class="st300_term term">today</span>. It will not be indefinitely expanded and grown organically, as this would directly contradict the goal of having a <span class="st300_term term">minimalist</span> and <span class="st300_term term">correct</span> rendering system.</li><li class="st300_list_item">OpenGL ES 2 support. The ES 2 standard was written as a reaction to the insane committee politics that plagued the OpenGL 2.* standards. It is crippled to the point that it essentially cannot support almost any of the rendering techniques present in the <span class="st300_term package">r2</span> package, and is becoming increasingly irrelevant as the much saner ES 3 is adopted by hardware vendors.</li></ul></div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p1.xhtml#st300_p1" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p1.xhtml#st300_p1" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p1s2.xhtml#st300_p1s2" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">1. Package Information</td><td class="st300_navbar_up_title_cell">1. Package Information</td><td class="st300_navbar_next_title_cell">1.2. Installation</td></tr></table></div></div></body></html>
