<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r2 0.2.0 Documentation: 2.27. Generic Refraction</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.26. Stippling</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.28. Filter: Fog</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s26.xhtml#st300_p2s26" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s28.xhtml#st300_p2s28" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.generic-refraction"/><div class="st300_section_title_number"><a id="st300_p2s27" href="#st300_p2s27" title="Section 2.27: Generic Refraction">2.27</a></div><div class="st300_section_title">Generic Refraction</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss1" title="Link to subsection 2.27.1: Overview">2.27.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss2" title="Link to subsection 2.27.2: Algorithm">2.27.2. Algorithm</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss3" title="Link to subsection 2.27.3: Sources">2.27.3. Sources</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss4" title="Link to subsection 2.27.4: Vectors">2.27.4. Vectors</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss5" title="Link to subsection 2.27.5: Colors">2.27.5. Colors</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss6" title="Link to subsection 2.27.6: Masking">2.27.6. Masking</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s27.xhtml#st300_p2s27ss7" title="Link to subsection 2.27.7: Types">2.27.7. Types</a></li></ul><div class="st300_subsection_container"><a id="di.generic-refraction.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss1" href="#st300_p2s27ss1" title="Subsection 2.27.1: Overview">2.27.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss1c1" href="#st300_p2s27ss1c1" title="Paragraph 2.27.1.1">1</a></div><div class="st300_paragraph">The <span class="st300_term package">r2</span> package implements the generic refraction effect described in <a class="st300_link_external" href="http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter19.html">GPU Gems 2</a>. The technique lends itself to a huge range of effects such as lenses, glass, heat haze, and water - simply by varying the meshes and textures used when performing refraction.</div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.algorithm"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss2" href="#st300_p2s27ss2" title="Subsection 2.27.2: Algorithm">2.27.2</a></div><div class="st300_subsection_title">Algorithm</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss2c1" href="#st300_p2s27ss2c1" title="Paragraph 2.27.2.1">1</a></div><div class="st300_paragraph">For a given instance, the process to render the instance is as follows:</div></div><div class="st300_formal_item"><a id="di.generic-refraction.algorithm.formal"/><div class="st300_formal_item_title"><a id="st300_p2s27ss2c2" href="#st300_p2s27ss2c2" title="Formal item 2.27.2.2: Algorithm">2.27.2.2 Algorithm</a></div><div class="st300_formal_item_content"><ol class="st300_list_ordered"><li class="st300_list_item">Produce a <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.masking">mask</a>, if necessary.</li><li class="st300_list_item">Render the instance using a given <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.source">source image</a>, <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.vectors">vector texture</a>, <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.color">color</a>, and <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.masking">mask image</a>.</li></ol></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss2c3" href="#st300_p2s27ss2c3" title="Paragraph 2.27.2.3">3</a></div><div class="st300_paragraph">The actual rendering technique is very simple: Given a screen-space position <span class="st300_term expression">(x, y)</span>, sample the color from a <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.source">source</a> image at <span class="st300_term expression">(x + s, y + t)</span>, where <span class="st300_term expression">(s, t)</span> are signed per-pixel offset values that are sampled from textures or derived from an associated <a class="st300_link" href="p2s27.xhtml#di.generic-refraction.vectors">vector</a> texture.</div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.source"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss3" href="#st300_p2s27ss3" title="Subsection 2.27.3: Sources">2.27.3</a></div><div class="st300_subsection_title">Sources</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss3c1" href="#st300_p2s27ss3c1" title="Paragraph 2.27.3.1">1</a></div><div class="st300_paragraph">The refraction effect typically uses a (possibly downsized) image of the scene as a source image. The <span class="st300_term package">r2</span> allows for use of an arbitrary image.</div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.vectors"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss4" href="#st300_p2s27ss4" title="Subsection 2.27.4: Vectors">2.27.4</a></div><div class="st300_subsection_title">Vectors</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss4c1" href="#st300_p2s27ss4c1" title="Paragraph 2.27.4.1">1</a></div><div class="st300_paragraph">Refraction vectors are sampled from the red and green components of a delta texture. The sampled values are scaled by the material's scale factor and used directly to calculate <span class="st300_term expression">(x + s, y + t)</span>. For example, a simple noisy red/green delta texture applied to a quad results in the following effect:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss4c2" href="#st300_p2s27ss4c2" title="Formal item 2.27.4.2: Noise quad">2.27.4.2 Noise quad</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Noise quad" src="images/refract_noise_quad.png"/></div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss4c3" href="#st300_p2s27ss4c3" title="Formal item 2.27.4.3: Noise quad (texture)">2.27.4.3 Noise quad (texture)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Noise quad texture" src="images/refract_noise_quad_texture.png"/></div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.color"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss5" href="#st300_p2s27ss5" title="Subsection 2.27.5: Colors">2.27.5</a></div><div class="st300_subsection_title">Colors</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss5c1" href="#st300_p2s27ss5c1" title="Paragraph 2.27.5.1">1</a></div><div class="st300_paragraph">The sampled scene colors used to perform the refraction effect are multiplied by a constant color, specified by each material. This allows for simple colored glass effects (shown here with a specular-only instance rendered over the top of the refractive instance to provide specular highlights):</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss5c2" href="#st300_p2s27ss5c2" title="Formal item 2.27.5.2: Color 0">2.27.5.2 Color 0</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Color 0" src="images/refract_color_0.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss5c3" href="#st300_p2s27ss5c3" title="Paragraph 2.27.5.3">3</a></div><div class="st300_paragraph">Using pure RGBA white <span class="st300_term expression">(1.0, 1.0, 1.0, 1.0)</span> results in a clear glass material:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss5c4" href="#st300_p2s27ss5c4" title="Formal item 2.27.5.4: Color 1">2.27.5.4 Color 1</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Color 1" src="images/refract_color_1.png"/></div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.masking"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss6" href="#st300_p2s27ss6" title="Subsection 2.27.6: Masking">2.27.6</a></div><div class="st300_subsection_title">Masking</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss6c1" href="#st300_p2s27ss6c1" title="Paragraph 2.27.6.1">1</a></div><div class="st300_paragraph">Because refractive instances are translucent, they are normally rendered after having already rendered all of the opaque objects in the scene. Because rendering of translucent instances occurs with depth testing enabled, it is therefore possible for opaque instances to occlude refractive instances. This poses a problem for the implementation of refraction described above, because the pixels of an occluding object may be sampled when performing the refraction, as shown in the following image:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss6c2" href="#st300_p2s27ss6c2" title="Formal item 2.27.6.2: Refraction bleeding">2.27.6.2 Refraction bleeding</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Refraction bleeding" src="images/refract_bleed.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss6c3" href="#st300_p2s27ss6c3" title="Paragraph 2.27.6.3">3</a></div><div class="st300_paragraph">Note how the pixels of the opaque instances are bleeding into the refracting object, despite being conceptually in front of it. This is because the refraction effect is implemented in screen space and is just sampling pixels from the surrounding area to simulate the bending of light rays. Using a <span class="st300_term term">mask</span> prevents this:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss6c4" href="#st300_p2s27ss6c4" title="Formal item 2.27.6.4: Refraction without bleeding">2.27.6.4 Refraction without bleeding</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Refraction without bleeding" src="images/refract_nobleed.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss6c5" href="#st300_p2s27ss6c5" title="Paragraph 2.27.6.5">5</a></div><div class="st300_paragraph">A mask is produced by rendering a monochrome silhouette of the refracting object, and then using the values of this mask to linearly interpolate between the colors <span class="st300_term expression">c</span> at <span class="st300_term expression">(x, y)</span> and the colors <span class="st300_term expression">r</span> at <span class="st300_term expression">(x + s, y + t)</span>. That is, a value of <span class="st300_term expression">m = 0</span> sampled from the mask yields <span class="st300_term expression">mix c r m = mix c r 0 = c</span>, and a value of <span class="st300_term expression">m = 1</span> sampled from the mask yields <span class="st300_term expression">mix c r m = mix c r 1 = r</span>. This has the effect of preventing the refraction simulation from using pixels that fall outside of the mask area.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s27ss6c6" href="#st300_p2s27ss6c6" title="Formal item 2.27.6.6: Mask">2.27.6.6 Mask</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Mask" src="images/refract_mask.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss6c7" href="#st300_p2s27ss6c7" title="Paragraph 2.27.6.7">7</a></div><div class="st300_paragraph">The mask image can also be softened with a simple box blur to reduce artifacts in the refracted image.</div></div></div><div class="st300_subsection_container"><a id="di.generic-refraction.types"/><div class="st300_subsection_title_number"><a id="st300_p2s27ss7" href="#st300_p2s27ss7" title="Subsection 2.27.7: Types">2.27.7</a></div><div class="st300_subsection_title">Types</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss7c1" href="#st300_p2s27ss7c1" title="Paragraph 2.27.7.1">1</a></div><div class="st300_paragraph">In the <span class="st300_term package">r2</span> package, the refraction effect is provided by rendering a translucent instance with a refraction shader such as <a class="st300_link_external" href="apidocs/com/io7m/r2/core/shaders/provided/R2RefractionMaskedDeltaShaderSingle.html">R2RefractionMaskedDeltaShaderSingle</a>.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s27ss7c2" href="#st300_p2s27ss7c2" title="Paragraph 2.27.7.2">2</a></div><div class="st300_paragraph">Masks can be produced via implementations of the <a class="st300_link_external" href="apidocs/com/io7m/r2/core/R2MaskRendererType.html">R2MaskRendererType</a> interface.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s26.xhtml#st300_p2s26" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s28.xhtml#st300_p2s28" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.26. Stippling</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.28. Filter: Fog</td></tr></table></div></div></body></html>
