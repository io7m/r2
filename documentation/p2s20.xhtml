<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>io7m-r2 0.2.1 Documentation: 2.20. Deferred Rendering: Lighting</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.19. Deferred Rendering: Geometry</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.21. Deferred Rendering: Position Reconstruction</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s19.xhtml#st300_p2s19" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s21.xhtml#st300_p2s21" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.deferred.light"/><div class="st300_section_title_number"><a id="st300_p2s20" href="#st300_p2s20" title="Section 2.20: Deferred Rendering: Lighting">2.20</a></div><div class="st300_section_title">Deferred Rendering: Lighting</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s20.xhtml#st300_p2s20ss1" title="Link to subsection 2.20.1: Overview">2.20.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s20.xhtml#st300_p2s20ss2" title="Link to subsection 2.20.2: Light Buffer">2.20.2. Light Buffer</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s20.xhtml#st300_p2s20ss3" title="Link to subsection 2.20.3: Light Clip Volumes">2.20.3. Light Clip Volumes</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s20.xhtml#st300_p2s20ss4" title="Link to subsection 2.20.4: Types">2.20.4. Types</a></li></ul><div class="st300_subsection_container"><a id="di.deferred.light.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s20ss1" href="#st300_p2s20ss1" title="Subsection 2.20.1: Overview">2.20.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss1c1" href="#st300_p2s20ss1c1" title="Paragraph 2.20.1.1">1</a></div><div class="st300_paragraph">The second step in <span class="st300_term term">deferred rendering</span> involves rendering the light contributions of all light sources within a scene to a <a class="st300_link" href="p2s20.xhtml#di.deferred.light.lbuffer">light buffer</a>. The rendering algorithm requires sampling from a populated <a class="st300_link" href="p2s19.xhtml#di.deferred.geom.gbuffer">geometry buffer</a>.</div></div></div><div class="st300_subsection_container"><a id="di.deferred.light.lbuffer"/><div class="st300_subsection_title_number"><a id="st300_p2s20ss2" href="#st300_p2s20ss2" title="Subsection 2.20.2: Light Buffer">2.20.2</a></div><div class="st300_subsection_title">Light Buffer</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss2c1" href="#st300_p2s20ss2c1" title="Paragraph 2.20.2.1">1</a></div><div class="st300_paragraph">A <span class="st300_term term">light buffer</span> is a <a class="st300_link" href="p2s7.xhtml#di.render-target">render target</a> in which the light contributions of all light sources are summed in preparation for being combined with the surface albedo of a <a class="st300_link" href="p2s19.xhtml#di.deferred.geom.gbuffer">geometry buffer</a> to produce a lit image.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss2c2" href="#st300_p2s20ss2c2" title="Paragraph 2.20.2.2">2</a></div><div class="st300_paragraph">A light buffer consists of a 32-bit RGBA <span class="st300_term term">diffuse</span> image and a 32-bit RGBA <span class="st300_term term">specular</span> image. Currently, the alpha channels of both images are unused and exist solely because OpenGL 3.3 does not provide a color-renderable 24-bit RGB format.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss2c3" href="#st300_p2s20ss2c3" title="Paragraph 2.20.2.3">3</a></div><div class="st300_paragraph">The <span class="st300_term package">r2</span> package offers the ability to disable <a class="st300_link" href="p2s12.xhtml#di.lighting.specular">specular lighting</a> entirely if it is not needed, and so light buffer implementations provide the ability to avoid allocating an image for specular contributions if they will not be calculated.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss2c4" href="#st300_p2s20ss2c4" title="Paragraph 2.20.2.4">4</a></div><div class="st300_paragraph">In the <span class="st300_term package">r2</span> package, light buffers are instances of <a class="st300_link_external" href="apidocs/com/io7m/r2/core/R2LightBufferType.html">R2LightBufferType</a>.</div></div></div><div class="st300_subsection_container"><a id="di.deferred.light.clip_volumes"/><div class="st300_subsection_title_number"><a id="st300_p2s20ss3" href="#st300_p2s20ss3" title="Subsection 2.20.3: Light Clip Volumes">2.20.3</a></div><div class="st300_subsection_title">Light Clip Volumes</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c1" href="#st300_p2s20ss3c1" title="Paragraph 2.20.3.1">1</a></div><div class="st300_paragraph">A <span class="st300_term light">light clip volume</span> is a means of constraining the contributions of groups of light sources to a provided <span class="st300_term term">volume</span>.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c2" href="#st300_p2s20ss3c2" title="Paragraph 2.20.3.2">2</a></div><div class="st300_paragraph">Because, like most renderers, the <span class="st300_term package">r2</span> package implements so-called <span class="st300_term term">local illumination</span>, lights that do not have explicit <span class="st300_term term">shadow mapping</span> enabled are able to bleed through solid objects:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c3" href="#st300_p2s20ss3c3" title="Formal item 2.20.3.3: Local Light Bleed">2.20.3.3 Local Light Bleed</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Local light bleeding." src="images/lightbleed_noclip.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c4" href="#st300_p2s20ss3c4" title="Paragraph 2.20.3.4">4</a></div><div class="st300_paragraph">Enabling shadow mapping for every single light source would be prohibitively expensive <span class="st300_footnote_reference">[<a href="p2s2.xhtml#st300_f_2627_1" id="st300_fr_13636" title="Jump to footnote di.concepts.shadow_expensive (reference 1)">3</a>]</span>, but for some scenes, acceptable results can be achieved by simply preventing the light source from affecting pixels outside of a given <span class="st300_term term">clip volume</span>.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c5" href="#st300_p2s20ss3c5" title="Formal item 2.20.3.5: Local Light Clipped">2.20.3.5 Local Light Clipped</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Local light clipped to a volume." src="images/lightbleed_clip.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c6" href="#st300_p2s20ss3c6" title="Paragraph 2.20.3.6">6</a></div><div class="st300_paragraph">The technique is implemented using the <a class="st300_link" href="p2s11.xhtml#di.stencil">stencil buffer</a>, using a single <span class="st300_term term">light clip volume bit</span>.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c7" href="#st300_p2s20ss3c7" title="Formal item 2.20.3.7: Algorithm">2.20.3.7 Algorithm</a></div><div class="st300_formal_item_content"><ol class="st300_list_ordered"><li class="st300_list_item">Disable depth writing, and enable depth testing using the standard less-than-or-equal-to depth function is used.</li><li class="st300_list_item">For each light clip volume <span class="st300_term expression">v</span>: <ol class="st300_list_ordered"><li class="st300_list_item">Clear the <span class="st300_term term">light clip volume</span> bit in the stencil buffer.</li><li class="st300_list_item">Configure stencil testing such that the stencil test always passes.</li><li class="st300_list_item">Configure stencil writing such that: <ul class="st300_list_unordered"><li class="st300_list_item">Only the light clip volume bit can be written.</li><li class="st300_list_item">Pixels that fail the depth test will invert the value of the light clip volume bit <span class="st300_term expression">(GL_INVERT)</span>.</li><li class="st300_list_item">Pixels that pass the depth test leave the value of the light clip volume bit untouched.</li><li class="st300_list_item">Pixels that pass the stencil test leave the value of the light clip volume bit untouched.</li></ul></li><li class="st300_list_item">Render both the front and back faces of <span class="st300_term expression">v</span>.</li><li class="st300_list_item">Configure stencil testing such that only those pixels with both the <a class="st300_link" href="p2s11.xhtml#di.stencil.allow_bit">allow bit</a> and light clip volume bit set will be touched.</li><li class="st300_list_item">Render all of the light sources associated with <span class="st300_term expression">v</span>.</li></ol></li></ol></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c8" href="#st300_p2s20ss3c8" title="Paragraph 2.20.3.8">8</a></div><div class="st300_paragraph">The reason the algorithm works can be inferred from the following diagram:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c9" href="#st300_p2s20ss3c9" title="Formal item 2.20.3.9: Stencil Test Diagram">2.20.3.9 Stencil Test Diagram</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Stencil test diagram" src="images/light_clip_volume_diagram.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c10" href="#st300_p2s20ss3c10" title="Paragraph 2.20.3.10">10</a></div><div class="st300_paragraph">In the diagram, the grey polygons represent the already-rendered depths of the scene geometry <span class="st300_footnote_reference">[<a href="p2s20.xhtml#st300_f_13950_0" id="st300_fr_13914" title="Jump to footnote di.deferred.light.depth (reference 0)">19</a>]</span>. If a point is inside or behind (from  the perspective of the observer) one of the polygons, then the depth of the point is considered to be <span class="st300_term term">greater</span> than the scene geometry.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c11" href="#st300_p2s20ss3c11" title="Paragraph 2.20.3.11">11</a></div><div class="st300_paragraph">In the diagram, when rendering the front face of the light volume at point <span class="st300_term expression">P0</span>, the depth of the light volume face at <span class="st300_term expression">P0</span> is less than the current scene depth, and so the depth test succeeds and the light clip volume bit is not touched. When rendering the back face of the light volume at point <span class="st300_term expression">P1</span>, the depth of the light volume face at <span class="st300_term expression">P1</span> is greater than the current scene depth so the depth test fails, and the light clip volume bit is inverted, setting it to <span class="st300_term constant">true</span>. This means that the scene geometry along that view ray is <span class="st300_term term">inside</span> the light clip volume.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c12" href="#st300_p2s20ss3c12" title="Paragraph 2.20.3.12">12</a></div><div class="st300_paragraph">In the diagram, when rendering the front face of the light volume at point <span class="st300_term expression">P2</span>, the depth of the light volume face at <span class="st300_term expression">P2</span> is greater than the current scene depth, and so the depth test fails and the light clip volume bit is inverted, setting it to <span class="st300_term constant">true</span>. When rendering the back face of the light volume at point <span class="st300_term expression">P3</span>, the depth of the light volume face at <span class="st300_term expression">P3</span> is greater than the current scene depth, so the depth test fails and the light clip volume bit is inverted again, setting it to <span class="st300_term constant">false</span>. This means that the scene geometry along that view ray is <span class="st300_term term">outside</span> the light clip volume.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c13" href="#st300_p2s20ss3c13" title="Paragraph 2.20.3.13">13</a></div><div class="st300_paragraph">In the diagram, when rendering the front face of the light volume at point <span class="st300_term expression">P4</span>, the depth of the light volume face at <span class="st300_term expression">P4</span> is less than the current scene depth, and so the depth test succeeds and the light clip volume bit is not touched. When rendering the back face of the light volume at point <span class="st300_term expression">P5</span>, the depth of the light volume face at <span class="st300_term expression">P5</span> is less than the current scene depth, and so the depth test succeeds and the light clip volume bit is not touched. Because the light clip volume bit is <span class="st300_term constant">false</span> by default and is not modified, this results in the scene geometry along that view ray being considered to be <span class="st300_term term">outside</span> the light clip volume.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c14" href="#st300_p2s20ss3c14" title="Paragraph 2.20.3.14">14</a></div><div class="st300_paragraph">Given the initial depth buffer from an example scene:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c15" href="#st300_p2s20ss3c15" title="Formal item 2.20.3.15: Depth Buffer">2.20.3.15 Depth Buffer</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Scene depth buffer." src="images/light_clip_volume_depth.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c16" href="#st300_p2s20ss3c16" title="Paragraph 2.20.3.16">16</a></div><div class="st300_paragraph">The stencil buffer for the initial scene has all of the geometry with the <a class="st300_link" href="p2s11.xhtml#di.stencil.allow_bit">allow bit</a> set:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c17" href="#st300_p2s20ss3c17" title="Formal item 2.20.3.17: Stencil Buffer (Initial)">2.20.3.17 Stencil Buffer (Initial)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Scene stencil buffer (initial) ." src="images/light_clip_volume_stencil_before.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c18" href="#st300_p2s20ss3c18" title="Paragraph 2.20.3.18">18</a></div><div class="st300_paragraph">After rendering a cuboid-shaped light volume that is intended to constrain the contributions of a light source to a single area, all pixels that fell within the clip volume have the light clip volume bit set:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c19" href="#st300_p2s20ss3c19" title="Formal item 2.20.3.19: Stencil Buffer (Result)">2.20.3.19 Stencil Buffer (Result)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Scene stencil buffer (result) ." src="images/light_clip_volume_stencil_after.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss3c20" href="#st300_p2s20ss3c20" title="Paragraph 2.20.3.20">20</a></div><div class="st300_paragraph">Then, after rendering the light contribution of the constrainted light, the light contribution becomes:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s20ss3c21" href="#st300_p2s20ss3c21" title="Formal item 2.20.3.21: Light Buffer (Result)">2.20.3.21 Light Buffer (Result)</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Scene light buffer (result) ." src="images/light_clip_volume_diffuse.png"/></div></div></div><div class="st300_subsection_container"><a id="di.deferred.light.types"/><div class="st300_subsection_title_number"><a id="st300_p2s20ss4" href="#st300_p2s20ss4" title="Subsection 2.20.4: Types">2.20.4</a></div><div class="st300_subsection_title">Types</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s20ss4c1" href="#st300_p2s20ss4c1" title="Paragraph 2.20.4.1">1</a></div><div class="st300_paragraph">In the <span class="st300_term package">r2</span> package, the primary implementation of the deferred light rendering algorithm is the <a class="st300_link_external" href="apidocs/com/io7m/r2/core/R2LightRenderer.html">R2LightRenderer</a> type.</div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_13950_0" href="p2s20.xhtml#st300_fr_13914" title="Jump back to reference 0 of footnote di.deferred.light.depth">19</a>]</div><div class="st300_footnote_body">This is slightly misleading because the depth buffer is a simple heightmap and so of course only the nearest faces of each shape would be preserved by the depth buffer. Nevertheless, for the purposes of comprehension, the full shapes are shown.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s19.xhtml#st300_p2s19" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s21.xhtml#st300_p2s21" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.19. Deferred Rendering: Geometry</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.21. Deferred Rendering: Position Reconstruction</td></tr></table></div></div></body></html>
