<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>com.io7m.r2 0.3.0-SNAPSHOT Documentation: 2.12. Lighting</title><meta http-equiv="Content-Type" content="application/xhtml+xml; charset=UTF-8"/><link rel="stylesheet" type="text/css" href="kstructural-layout.css"/><link rel="stylesheet" type="text/css" href="kstructural-colour.css"/><link rel="stylesheet" type="text/css" href="documentation.css"/></head><body><div class="st300_body"><div class="st300_navbar st300_navbar_top"><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_title_cell">2.11. Stencils</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.13. Lighting: Directional</td></tr><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s11.xhtml#st300_p2s11" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s13.xhtml#st300_p2s13" title="Go to next page">Next</a></td></tr></table><hr class="st300_hr"/></div><div class="st300_section_container"><a id="di.lighting"/><div class="st300_section_title_number"><a id="st300_p2s12" href="#st300_p2s12" title="Section 2.12: Lighting">2.12</a></div><div class="st300_section_title">Lighting</div><ul class="st300_contents st300_section_contents_outer st300_section_contents"><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s12.xhtml#st300_p2s12ss1" title="Link to subsection 2.12.1: Overview">2.12.1. Overview</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s12.xhtml#st300_p2s12ss2" title="Link to subsection 2.12.2: Diffuse/Specular Terms">2.12.2. Diffuse/Specular Terms</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s12.xhtml#st300_p2s12ss3" title="Link to subsection 2.12.3: Diffuse-Only Lights">2.12.3. Diffuse-Only Lights</a></li><li class="st300_contents_item st300_contents_item1 st300_contents_item_subsection"><a href="p2s12.xhtml#st300_p2s12ss4" title="Link to subsection 2.12.4: Attenuation">2.12.4. Attenuation</a></li></ul><div class="st300_subsection_container"><a id="di.lighting.overview"/><div class="st300_subsection_title_number"><a id="st300_p2s12ss1" href="#st300_p2s12ss1" title="Subsection 2.12.1: Overview">2.12.1</a></div><div class="st300_subsection_title">Overview</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss1c1" href="#st300_p2s12ss1c1" title="Paragraph 2.12.1.1">1</a></div><div class="st300_paragraph">The following sections of documentation attempt to describe the theory and implementation of <span class="st300_term term">lighting</span> in the <span class="st300_term package">r2</span> package. All lighting in the package is <span class="st300_term term">dynamic</span>- there is no support for precomputed lighting and all contributions from lights are recalculated every time a scene is rendered. Lighting is configured by adding instances of <a class="st300_link_external" href="apidocs/com/io7m/r2/core/R2LightType.html">R2LightType</a> to a scene.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.diffuse-specular"/><div class="st300_subsection_title_number"><a id="st300_p2s12ss2" href="#st300_p2s12ss2" title="Subsection 2.12.2: Diffuse/Specular Terms">2.12.2</a></div><div class="st300_subsection_title">Diffuse/Specular Terms</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss2c1" href="#st300_p2s12ss2c1" title="Paragraph 2.12.2.1">1</a></div><div class="st300_paragraph">The light applied to a surface by a given light is divided into <span class="st300_term term">diffuse</span> and <span class="st300_term term">specular</span> terms <span class="st300_footnote_reference">[<a href="p2s12.xhtml#st300_f_8581_0" id="st300_fr_8002" title="Jump to footnote di.lighting.no_ambient (reference 0)">15</a>]</span>. The actual light applied to a surface is dependent upon the properties of the surface. Conceptually, the diffuse and specular terms are multiplied by the final color of the surface and summed. In practice, the materials applied to surfaces have control over how light is actually applied to the surface. For example, materials may include a <span class="st300_term term">specular map</span> which is used to manipulate the specular term as it is applied to the surface. Additionally, if a light supports <span class="st300_term term">attenuation</span>, then the diffuse and specular terms are scaled by the attenuation factor prior to being applied.</div></div><div class="st300_paragraph_container"><a id="di.lighting.diffuse"/><div class="st300_paragraph_number"><a id="st300_p2s12ss2c2" href="#st300_p2s12ss2c2" title="Paragraph 2.12.2.2">2</a></div><div class="st300_paragraph">The <span class="st300_term term">diffuse</span> term is modelled by <a class="st300_link_external" href="http://en.wikipedia.org/wiki/Lambertian_reflectance">Lambertian reflectance</a>. Specifically, the amount of diffuse light reflected from a surface is given by <span class="st300_term function">diffuse</span> in <a class="st300_link_external" href="haskell/LightDiffuse.hs">LightDiffuse.hs</a>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss2c3" href="#st300_p2s12ss2c3" title="Formal item 2.12.2.3: Diffuse term">2.12.2.3 Diffuse term</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">module LightDiffuse where

import qualified Color3
import qualified Direction
import qualified Normal
import qualified Spaces
import qualified Vector3f

diffuse ::  Direction.T Spaces.Eye -&gt; Normal.T -&gt; Color3.T -&gt; Float -&gt; Vector3f.T
diffuse stl n light_color light_intensity =
  let 
    factor       = max 0.0 (Vector3f.dot3 stl n)
    light_scaled = Vector3f.scale light_color light_intensity
  in 
    Vector3f.scale light_scaled factor</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss2c4" href="#st300_p2s12ss2c4" title="Paragraph 2.12.2.4">4</a></div><div class="st300_paragraph">Where <span class="st300_term variable">stl</span> is a unit length direction vector from the surface to the light source, <span class="st300_term variable">n</span> is the surface normal vector, <span class="st300_term variable">light_color</span> is the light color, and <span class="st300_term variable">light_intensity</span> is the light intensity. Informally, the algorithm determines how much diffuse light should be reflected from a surface based on how directly that surface points towards the light. When <span class="st300_term expression">stl == n</span>, <span class="st300_term expression">Vector3f.dot3 stl n == 1.0</span>, and therefore the light is reflected exactly as received. When <span class="st300_term expression">stl</span> is perpendicular to <span class="st300_term expression">n</span> (such that <span class="st300_term expression">Vector3f.dot3 stl n == 0.0</span> ), no light is reflected at all. If the two directions are greater than <span class="st300_term constant">90Â°</span> perpendicular, the dot product is negative, but the algorithm clamps negative values to <span class="st300_term constant">0.0</span> so the effect is the same.</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss2c5" href="#st300_p2s12ss2c5" title="Formal item 2.12.2.5: Diffuse light">2.12.2.5 Diffuse light</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Diffuse light" src="images/directional_diffuse.png"/></div></div><div class="st300_paragraph_container"><a id="di.lighting.specular"/><div class="st300_paragraph_number"><a id="st300_p2s12ss2c6" href="#st300_p2s12ss2c6" title="Paragraph 2.12.2.6">6</a></div><div class="st300_paragraph">The specular term is modelled either by <a class="st300_link_external" href="http://en.wikipedia.org/wiki/Phong_reflection_model">Phong</a> or <a class="st300_link_external" href="https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model">Blinn-Phong</a> reflection. The <span class="st300_term package">r2</span> package provides light shaders that provide both Phong and Blinn-Phong specular lighting and the user may freely pick between implementations. For the sake of simplicity, the rest of this documentation assumes that Blinn-Phong shading is being used. Specifically, the amount of specular light reflected from a surface is given by <span class="st300_term function">specularBlinnPhong</span> in <a class="st300_link_external" href="haskell/LightSpecular.hs">LightSpecular.hs</a>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss2c7" href="#st300_p2s12ss2c7" title="Formal item 2.12.2.7: Specular Term">2.12.2.7 Specular Term</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">module LightSpecular where

import qualified Color3
import qualified Direction
import qualified Normal
import qualified Reflection
import qualified Spaces
import qualified Specular
import qualified Vector3f

specularPhong :: Direction.T Spaces.Eye -&gt; Direction.T Spaces.Eye -&gt; Normal.T -&gt; Color3.T -&gt; Float -&gt; Specular.T -&gt; Vector3f.T
specularPhong stl view n light_color light_intensity (Specular.S surface_spec surface_exponent) =
  let 
    reflection   = Reflection.reflection view n
    factor       = (max 0.0 (Vector3f.dot3 reflection stl)) ** surface_exponent
    light_raw    = Vector3f.scale light_color light_intensity
    light_scaled = Vector3f.scale light_raw factor
  in 
    Vector3f.mult3 light_scaled surface_spec

specularBlinnPhong :: Direction.T Spaces.Eye -&gt; Direction.T Spaces.Eye -&gt; Normal.T -&gt; Color3.T -&gt; Float -&gt; Specular.T -&gt; Vector3f.T
specularBlinnPhong stl view n light_color light_intensity (Specular.S surface_spec surface_exponent) =
  let
    reflection   = Reflection.reflection view n
    factor       = (max 0.0 (Vector3f.dot3 reflection stl)) ** surface_exponent
    light_raw    = Vector3f.scale light_color light_intensity
    light_scaled = Vector3f.scale light_raw factor
  in
    Vector3f.mult3 light_scaled surface_spec</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss2c8" href="#st300_p2s12ss2c8" title="Paragraph 2.12.2.8">8</a></div><div class="st300_paragraph">Where <span class="st300_term variable">stl</span> is a unit length direction vector from the surface to the light source, <span class="st300_term variable">view</span> is a unit length direction vector from the observer to the surface, <span class="st300_term variable">n</span> is the surface normal vector, <span class="st300_term variable">light_color</span> is the light color, <span class="st300_term variable">light_intensity</span> is the light intensity, <span class="st300_term variable">surface_exponent</span> is the <span class="st300_term term">specular exponent</span> defined by the surface, and <span class="st300_term variable">surface_spec</span> is the surface specularity factor.</div></div><div class="st300_paragraph_container"><a id="di.lighting.diffuse-specular.specular-exponent"/><div class="st300_paragraph_number"><a id="st300_p2s12ss2c9" href="#st300_p2s12ss2c9" title="Paragraph 2.12.2.9">9</a></div><div class="st300_paragraph">The specular exponent is a value, ordinarily in the range <span class="st300_term expression">[0, 255]</span>, that controls how sharp the <span class="st300_term term">specular highlights</span> appear on the surface. The exponent is a property of the surface, as opposed to being a property of the light. Low specular exponents result in soft and widely dispersed specular highlights (giving the appearance of a rough surface), while high specular exponents result in hard and focused highlights (giving the appearance of a polished surface). As an example, three models lit with progressively lower specular exponents from left to right ( <span class="st300_term constant">128</span>, <span class="st300_term constant">32</span>, and <span class="st300_term constant">8</span>, respectively):</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss2c10" href="#st300_p2s12ss2c10" title="Formal item 2.12.2.10: Specular exponents">2.12.2.10 Specular exponents</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Specular exponents" src="images/directional_specular_exponents.png"/></div></div></div><div class="st300_subsection_container"><a id="di.lighting.diffuse-only"/><div class="st300_subsection_title_number"><a id="st300_p2s12ss3" href="#st300_p2s12ss3" title="Subsection 2.12.3: Diffuse-Only Lights">2.12.3</a></div><div class="st300_subsection_title">Diffuse-Only Lights</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss3c1" href="#st300_p2s12ss3c1" title="Paragraph 2.12.3.1">1</a></div><div class="st300_paragraph">Some lights have <span class="st300_term term">diffuse-only</span> variants. Little explanation is required: The <a class="st300_link" href="p2s12.xhtml#di.lighting.specular">specular</a> term is simply not calculated and only the <span class="st300_term term">diffuse</span> term is used.</div></div></div><div class="st300_subsection_container"><a id="di.lighting.attenuation"/><div class="st300_subsection_title_number"><a id="st300_p2s12ss4" href="#st300_p2s12ss4" title="Subsection 2.12.4: Attenuation">2.12.4</a></div><div class="st300_subsection_title">Attenuation</div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c1" href="#st300_p2s12ss4c1" title="Paragraph 2.12.4.1">1</a></div><div class="st300_paragraph"><span class="st300_term term">Attenuation</span> is the property of the influence of a given light on a surface in inverse proportion to the distance from the light to the surface. In other words, for lights that support attenuation, the further a surface is from a light source, the less that surface will appear to be lit by the light. For light types that support attenuation, an <span class="st300_term term">attenuation factor</span> is calculated based on a given <span class="st300_term variable">inverse_maximum_range</span> (where the <span class="st300_term variable">maximum_range</span> is a light-type specific positive value that represents the maximum possible range of influence for the light), a configurable <span class="st300_term term">inverse falloff</span> value, and the current <span class="st300_term variable">distance</span> between the surface being lit and the light source. The attenuation factor is a value in the range <span class="st300_term expression">[0.0, 1.0]</span>, with <span class="st300_term expression">1.0</span> meaning "no attenuation" and <span class="st300_term expression">0.0</span> meaning "maximum attenuation". The resulting attenuation factor is multiplied by the raw unattenuated light values produced for the light in order to produce the illusion of distance attenuation. Specifically:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss4c2" href="#st300_p2s12ss4c2" title="Formal item 2.12.4.2: Attenuation">2.12.4.2 Attenuation</a></div><div class="st300_formal_item_content"><pre class="st300_verbatim">module Attenuation where

attenuation_from_inverses :: Float -&gt; Float -&gt; Float -&gt; Float
attenuation_from_inverses inverse_maximum_range inverse_falloff distance =
  max 0.0 (1.0 - (distance * inverse_maximum_range) ** inverse_falloff)

attenuation :: Float -&gt; Float -&gt; Float -&gt; Float
attenuation maximum_range falloff distance =
  attenuation_from_inverses (1.0 / maximum_range) (1.0 / falloff) distance
</pre></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c3" href="#st300_p2s12ss4c3" title="Paragraph 2.12.4.3">3</a></div><div class="st300_paragraph">Given the above definitions, a number of observations can be made.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c4" href="#st300_p2s12ss4c4" title="Paragraph 2.12.4.4">4</a></div><div class="st300_paragraph">If <span class="st300_term expression">falloff == 1</span>, then the attenuation is linear over distance <span class="st300_footnote_reference">[<a href="p2s12.xhtml#st300_f_8998_0" id="st300_fr_8840" title="Jump to footnote di.lighting.attenuation.geogebra (reference 0)">16</a>]</span>:</div></div><div class="st300_formal_item"><a id="di.lighting.mathematics.attenuation-linear"/><div class="st300_formal_item_title"><a id="st300_p2s12ss4c5" href="#st300_p2s12ss4c5" title="Formal item 2.12.4.5: Linear attenuation">2.12.4.5 Linear attenuation</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Linear attenuation" src="images/attenuation_linear.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c6" href="#st300_p2s12ss4c6" title="Paragraph 2.12.4.6">6</a></div><div class="st300_paragraph">If <span class="st300_term expression">maximum_range == 0</span>, then the inverse range is undefined, and therefore the results of lighting are undefined. The <span class="st300_term package">r2</span> package handles this case by raising an exception when the light is created.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c7" href="#st300_p2s12ss4c7" title="Paragraph 2.12.4.7">7</a></div><div class="st300_paragraph">If <span class="st300_term expression">falloff == 0</span>, then the inverse falloff is undefined, and therefore the results of lighting are undefined. The <span class="st300_term package">r2</span> package handles this case by raising an exception when the light is created.</div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c8" href="#st300_p2s12ss4c8" title="Paragraph 2.12.4.8">8</a></div><div class="st300_paragraph">As <span class="st300_term expression">falloff</span> decreases towards <span class="st300_term expression">0.0</span>, then the attenuation curve remains at <span class="st300_term expression">1.0</span> for increasingly higher distance values before falling sharply to <span class="st300_term expression">0.0</span>:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss4c9" href="#st300_p2s12ss4c9" title="Formal item 2.12.4.9: Low falloff attenuation">2.12.4.9 Low falloff attenuation</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="Low falloff attenuation" src="images/attenuation_low_falloff.png"/></div></div><div class="st300_paragraph_container"><div class="st300_paragraph_number"><a id="st300_p2s12ss4c10" href="#st300_p2s12ss4c10" title="Paragraph 2.12.4.10">10</a></div><div class="st300_paragraph">As <span class="st300_term expression">falloff</span> increases away from <span class="st300_term expression">0.0</span>, then the attenuation curve decreases more for lower distance values:</div></div><div class="st300_formal_item"><div class="st300_formal_item_title"><a id="st300_p2s12ss4c11" href="#st300_p2s12ss4c11" title="Formal item 2.12.4.11: High falloff attenuation">2.12.4.11 High falloff attenuation</a></div><div class="st300_formal_item_content"><img class="st300_image" alt="High falloff attenuation" src="images/attenuation_high_falloff.png"/></div></div></div><div class="st300_footnotes"><hr/><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_8581_0" href="p2s12.xhtml#st300_fr_8002" title="Jump back to reference 0 of footnote di.lighting.no_ambient">15</a>]</div><div class="st300_footnote_body">The <span class="st300_term package">r2</span> package does not use ambient terms.</div></div><div class="st300_footnote_container"><div class="st300_footnote_id">[<a id="st300_f_8998_0" href="p2s12.xhtml#st300_fr_8840" title="Jump back to reference 0 of footnote di.lighting.attenuation.geogebra">16</a>]</div><div class="st300_footnote_body">The attenuation function development is available for experimentation in the included <a class="st300_link_external" href="http://geogebra.org">GeoGebra</a> file <a class="st300_link_external" href="attenuation.ggb">attenuation.ggb</a>.</div></div></div></div><div class="st300_navbar st300_navbar_bottom"><hr class="st300_hr"/><table class="st300_navbar_table" summary="st300_Navigation bar"><tr><td class="st300_navbar_prev_file_cell"><a rel="previous" href="p2s11.xhtml#st300_p2s11" title="Go to previous page">Previous</a></td><td class="st300_navbar_up_file_cell"><a rel="up" href="p2.xhtml#st300_p2" title="Go to parent page">Up</a></td><td class="st300_navbar_next_file_cell"><a rel="next" href="p2s13.xhtml#st300_p2s13" title="Go to next page">Next</a></td></tr><tr><td class="st300_navbar_prev_title_cell">2.11. Stencils</td><td class="st300_navbar_up_title_cell">2. Design And Implementation</td><td class="st300_navbar_next_title_cell">2.13. Lighting: Directional</td></tr></table></div></div></body></html>
